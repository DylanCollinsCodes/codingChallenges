Math.round = function(number) {
    if(number === 0){
        return number
    }
    number = numberToArray(number)
    len = number.length
    for(i = 0; i < len; i++){
        if(isNaN(number[i]) === true){
            if(number[i + 1] >=9){
                number[i - 1] = 0
                number[i - 2] += 1
                return Number(number.slice(0,number.findIndex(Number.isNaN)).join(''))
            }
            if(number[i + 1] > 4){
                number[i - 1] += 1
                return Number(number.slice(0,number.findIndex(Number.isNaN)).join(''))
            }else{
                return Number(number.slice(0,number.findIndex(Number.isNaN)).join(''))
            }
        }
    }
    return Number(number.join(''))  };
  
Math.ceil = function(number) {
    if(number === 0){
        return number
    }
    number = numberToArray(number)
    len = number.length
    for(i = 0; i < len; i++){
        if(isNaN(number[i]) === true){
            if(number[i + 1] >=9){
                number[i - 1] = 0
                number[i - 2] += 1
                return Number(number.slice(0,number.findIndex(Number.isNaN)).join(''))
            }
            number[i - 1] += 1
            return Number(number.slice(0,number.findIndex(Number.isNaN)).join(''))
        }
    }
    return Number(number.join(''))};

Math.floor = function(number) {
    if(number === 0){
        return number
    }
    number = numberToArray(number)
    len = number.length
    for(i = 0; i < len; i++){
        if(isNaN(number[i]) === true){
            return Number(number.slice(0,number.findIndex(Number.isNaN)).join(''))
        }
    }
  return Number(number.join(''))
};

function numberToArray(n){
    nString = `${n}`
    nString = nString.split('')
    len = nString.length
    for(j = 0; j < len; j++){
        nString[j] = +nString[j]
    }
    return nString
}
